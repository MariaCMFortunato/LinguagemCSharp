<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>